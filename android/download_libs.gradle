def libs_dir = new File(project.buildDir, 'libs')
def libs_url = project.hasProperty('libs_url') ?
        new URL(project.getProperty('libs_url').toString()) :
        new URL('https://github.com/OrangeLab/N-API/releases/download/1.1.0/napi.tar.gz')
def libs_file = new File(libs_dir, libs_url.path.split('/').last())

def qjsLibsDir = "${project.projectDir}/src/main/jni2/napi/napi/libs/qjs"
def hermesLibsDir = "${project.projectDir}/src/main/jni2/napi/napi/libs/hermes"

def downloadFile = { URL url, File dest ->
    if (!dest.getParentFile().exists()) {
        dest.getParentFile().mkdirs()
    }
    url.withInputStream { i -> dest.withOutputStream { it << i } }
}

task downloadLibs() {
    inputs.property('url', libs_url)
    outputs.file(libs_file)
    outputs.upToDateWhen {
        libs_file.exists()
    }
    doFirst {
        if (!libs_file.exists()) {
            downloadFile(libs_url, libs_file)
        }
    }
}

task pickQJSLibs(type: Copy, dependsOn: downloadLibs) {
    from tarTree(libs_file)
    into qjsLibsDir
    include '**/libs/**/libquickjs.so'
    includeEmptyDirs false
    eachFile {
        def path_list = new LinkedList<>(it.relativePath.segments.toList())
        path_list.removeAt(0)
        path_list.removeAt(0)
        it.relativePath = new RelativePath(true, path_list[0], path_list[1])
    }
    inputs.file(libs_file)
    outputs.dir(qjsLibsDir)
    outputs.upToDateWhen {
        new File(qjsLibsDir).exists()
    }
}

task pickHermesLibs(type: Copy, dependsOn: downloadLibs) {
    from tarTree(libs_file)
    into hermesLibsDir
    include '**/libs/**/libnapi_qjs.so'
    includeEmptyDirs false
    eachFile {
        def path_list = new LinkedList<>(it.relativePath.segments.toList())
        path_list.removeAt(0)
        path_list.removeAt(0)
        it.relativePath = new RelativePath(true, path_list[0], path_list[1])
    }
    inputs.file(libs_file)
    outputs.dir(hermesLibsDir)
    outputs.upToDateWhen {
        new File(hermesLibsDir).exists()
    }
}

task pickLibs(type: Copy) {
    dependsOn pickQJSLibs, pickHermesLibs
    outputs.dirs(qjsLibsDir, hermesLibsDir)
}