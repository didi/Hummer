import { HummerElement } from "../../HummerElement";
import { View } from "../View";
export declare class Scroller extends HummerElement {
    protected _bounces: boolean;
    protected _showScrollBar: boolean;
    protected _onLoadMore: (state: number) => void;
    protected _onRefresh: (state: number) => void;
    protected _refreshView: View;
    protected _loadMoreView: View;
    constructor(id?: string, name?: string, props?: any);
    get refreshView(): View;
    set refreshView(value: View);
    get loadMoreView(): View;
    set loadMoreView(value: View);
    get onLoadMore(): (state: number) => void;
    set onLoadMore(value: (state: number) => void);
    get onRefresh(): (state: number) => void;
    set onRefresh(value: (state: number) => void);
    get bounces(): boolean;
    set bounces(value: boolean);
    get showScrollBar(): boolean;
    set showScrollBar(value: boolean);
    appendChild(child: View): void;
    removeChild(child: View): void;
    removeAll(): void;
    insertBefore(child: View, existingChild: View): void;
    replaceChild(newChild: View, oldChild: View): void;
    scrollTo(x: Object, y: Object): void;
    scrollBy(dx: Object, dy: Object): void;
    scrollToTop(): void;
    scrollToBottom(): void;
    setOnScrollToTopListener(callback: () => void): void;
    setOnScrollToBottomListener(callback: () => void): void;
    stopPullRefresh(): void;
    stopLoadMore(enable: boolean): void;
}
