export function renderFunc(__Hummer__, __GLOBAL__) {
{"version":3,"file":"Hummer_Demo.js","mappingsdA;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAEA;;;;AAEA;AAEA;;AAEA;AACA;AACA;AACA;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;;AAMA;;AAIA;;AAEA;;AAGA;;AAEA;;AAGA;;AAEA;;AAGA;;AAEA;;AAGA;;AAEA;;AAGA;;AAEA;;AAGA;;AAEA;;AAGA;;AAEA;;AAGA;;;;;;;;AAQA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AA5HA;;AAmIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./node_modules/@hummer/tenon-dev-tool/dist/tenon-dev-tool.es.js","webpack:///external var \"__GLOBAL__\"","webpack:///../../../../../.nvm/versions/node/v20.9.0/lib/node_modules/@hummer/cli/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///../../../../../.nvm/versions/node/v20.9.0/lib/node_modules/@hummer/cli/node_modules/@babel/runtime/helpers/esm/callSuper.js","webpack:///../../../../../.nvm/versions/node/v20.9.0/lib/node_modules/@hummer/cli/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///../../../../../.nvm/versions/node/v20.9.0/lib/node_modules/@hummer/cli/node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///../../../../../.nvm/versions/node/v20.9.0/lib/node_modules/@hummer/cli/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///../../../../../.nvm/versions/node/v20.9.0/lib/node_modules/@hummer/cli/node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///../../../../../.nvm/versions/node/v20.9.0/lib/node_modules/@hummer/cli/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack:///../../../../../.nvm/versions/node/v20.9.0/lib/node_modules/@hummer/cli/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///../../../../../.nvm/versions/node/v20.9.0/lib/node_modules/@hummer/cli/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///../../../../../.nvm/versions/node/v20.9.0/lib/node_modules/@hummer/cli/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack:///../../../../../.nvm/versions/node/v20.9.0/lib/node_modules/@hummer/cli/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///../../../../../.nvm/versions/node/v20.9.0/lib/node_modules/@hummer/cli/node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/Hummer_Demo.js"],"sourcesContent":["const NODE_VIEW = \"Symbol(NODE_VIEW)\";\r\nconst NODE_TEXT = \"Symbol(NODE_TEXT)\";\r\nconst NODE_IMAGE = \"Symbol(NODE_IMAGE)\";\r\nconst NODE_BUTTON = \"Symbol(NODE_BUTTON)\";\r\nconst NODE_TEXTAREA = \"Symbol(NODE_TEXTAREA)\";\r\nconst NODE_INPUT = \"Symbol(NODE_INPUT)\";\r\nconst NODE_SWITCH = \"Symbol(NODE_SWITCH)\";\r\nconst NODE_SCROLLER = \"Symbol(NODE_SCROLLER)\";\r\nconst NODE_REFRESH = \"Symbol(NODE_REFRESH)\";\r\nconst NODE_LOADMORE = \"Symbol(NODE_LOADMORE)\";\r\nconst HUMMER_VIEW = 'View';\r\nconst HUMMER_TEXT = 'Text';\r\nconst HUMMER_BUTTON = 'Button';\r\nconst HUMMER_IMAGE = 'Image';\r\nconst HUMMER_INPUT = 'Input';\r\nconst HUMMER_TEXTAREA = 'TextArea';\r\nconst HUMMER_SWITCH = 'Switch';\r\nconst HUMMER_LOADING = 'Loading';\r\nconst HUMMER_SCROLLER = 'Scroller';\r\nconst HUMMER_HORIZONTALSCROLLER = 'HorizontalScroller';\r\nconst HUMMER_LIST = 'List';\r\nconst HUMMER_VIEWPAGER = 'ViewPager';\r\nconst HUMMER_DIALOG = 'Dialog';\r\nfunction getElementTagMap() {\r\n    let tagMap = new Map();\r\n    tagMap.set(NODE_VIEW, 'view');\r\n    tagMap.set(NODE_TEXT, 'text');\r\n    tagMap.set(NODE_IMAGE, 'image');\r\n    tagMap.set(NODE_BUTTON, 'button');\r\n    tagMap.set(NODE_TEXTAREA, 'textarea');\r\n    tagMap.set(NODE_INPUT, 'input');\r\n    tagMap.set(NODE_SWITCH, 'switch');\r\n    tagMap.set(NODE_SCROLLER, 'scroller');\r\n    tagMap.set(NODE_REFRESH, 'refresh');\r\n    tagMap.set(NODE_LOADMORE, 'loadmore');\r\n    tagMap.set(HUMMER_VIEW, 'view');\r\n    tagMap.set(HUMMER_TEXT, 'text');\r\n    tagMap.set(HUMMER_BUTTON, 'button');\r\n    tagMap.set(HUMMER_IMAGE, 'image');\r\n    tagMap.set(HUMMER_INPUT, 'input');\r\n    tagMap.set(HUMMER_TEXTAREA, 'textarea');\r\n    tagMap.set(HUMMER_SWITCH, 'switch');\r\n    tagMap.set(HUMMER_LOADING, 'loading');\r\n    tagMap.set(HUMMER_SCROLLER, 'scroller');\r\n    tagMap.set(HUMMER_HORIZONTALSCROLLER, 'horizontalscroller');\r\n    tagMap.set(HUMMER_LIST, 'list');\r\n    tagMap.set(HUMMER_VIEWPAGER, 'viewpager');\r\n    tagMap.set(HUMMER_DIALOG, 'view');\r\n    return tagMap;\r\n}\r\nconst ELEMNT_TAG_MAP = getElementTagMap();\r\nconst getPartUrlByParam = (url, param) => {\r\n    const reg = /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/;\r\n    const res = reg.exec(url);\r\n    const fields = ['url', 'scheme', 'slash', 'host', 'port', 'path', 'query', 'hash'];\r\n    return res[fields.indexOf(param)];\r\n};\r\nconst formatNode = function (node, type = 'tenon-vue') {\r\n    let formatedNode = Object.create({});\r\n    const treeTraveler = function (node, rootView) {\r\n        processView(node, rootView, type);\r\n        if (node.children) {\r\n            let arr = Array.from(node.children);\r\n            if (arr.length) {\r\n                rootView.children = Array.apply(null, new Array(arr.length)).map(() => { return {}; });\r\n                arr.forEach((n, i) => {\r\n                    treeTraveler(n, rootView.children[i]);\r\n                });\r\n            }\r\n        }\r\n    };\r\n    treeTraveler(node, formatedNode);\r\n    return formatedNode;\r\n};\r\nconst getViewData = function (container, type = 'tenon-vue') {\r\n    let simpleRoot = Object.create({});\r\n    let viewMap = Object.create({});\r\n    const treeTraveler = function (node, rootView) {\r\n        var _a, _b, _c, _d, _e;\r\n        if (node === null || node === void 0 ? void 0 : node.tagName) {\r\n            node.name = node === null || node === void 0 ? void 0 : node.tagName.toLowerCase();\r\n            node.style = (_a = node === null || node === void 0 ? void 0 : node.element) === null || _a === void 0 ? void 0 : _a._style;\r\n            node.__view_id = (_b = node === null || node === void 0 ? void 0 : node.element) === null || _b === void 0 ? void 0 : _b.objID;\r\n            switch (node.name) {\r\n                case 'text':\r\n                    node.text = (_c = node.element) === null || _c === void 0 ? void 0 : _c._text;\r\n                    break;\r\n                case 'image':\r\n                    node.src = (_d = node.element) === null || _d === void 0 ? void 0 : _d._src;\r\n                    break;\r\n            }\r\n        }\r\n        rootView = Object.assign(rootView, node);\r\n        viewMap[rootView.__view_id] = node;\r\n        delete rootView.children;\r\n        delete rootView.element;\r\n        if (node.name === 'template' && node !== container) {\r\n            if (node === null || node === void 0 ? void 0 : node.element.dbg_getDescription) {\r\n                node === null || node === void 0 ? void 0 : node.element.dbg_getDescription((thatNode) => {\r\n                    var _a;\r\n                    if (thatNode === null || thatNode === void 0 ? void 0 : thatNode.children) {\r\n                        thatNode.children.forEach((item, index) => {\r\n                            var _a, _b;\r\n                            thatNode.children[index].name = item === null || item === void 0 ? void 0 : item.tagName;\r\n                            thatNode.children[index].style = (_a = item === null || item === void 0 ? void 0 : item.element) === null || _a === void 0 ? void 0 : _a._style;\r\n                            thatNode.children[index].__view_id = (_b = item === null || item === void 0 ? void 0 : item.element) === null || _b === void 0 ? void 0 : _b.objID;\r\n                            switch (item.name) {\r\n                                case 'Text':\r\n                                    thatNode.children[index].text = item.element._text;\r\n                                    break;\r\n                                case 'Image':\r\n                                    thatNode.children[index].src = item.element._src;\r\n                                    break;\r\n                            }\r\n                        });\r\n                        node.children = thatNode.children;\r\n                    }\r\n                    node.name = thatNode.tagName.toLowerCase();\r\n                    rootView.name = node.name;\r\n                    if (node.children && node.children.length > 0) {\r\n                        rootView.children = Array.apply(null, new Array(((_a = node === null || node === void 0 ? void 0 : node.children) === null || _a === void 0 ? void 0 : _a.length) || 0)).map(() => { return {}; });\r\n                        let arr = Array.from(node.children);\r\n                        arr.forEach((n, i) => {\r\n                            treeTraveler(n, rootView.children[i]);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (node.children && node.children.length > 0) {\r\n                rootView.children = Array.apply(null, new Array(((_e = node === null || node === void 0 ? void 0 : node.children) === null || _e === void 0 ? void 0 : _e.length) || 0)).map(() => { return {}; });\r\n                let arr = Array.from(node.children);\r\n                arr.forEach((n, i) => {\r\n                    treeTraveler(n, rootView.children[i]);\r\n                });\r\n            }\r\n        }\r\n    };\r\n    treeTraveler(container, simpleRoot);\r\n    return {\r\n        simpleRoot,\r\n        viewMap\r\n    };\r\n};\r\nconst processView = function (node, rootView, type = 'tenon-vue') {\r\n    var _a;\r\n    let nameKey = '__NAME', idKey = '__view_id', textKey = '_text', srcKey = '_src', elementKey = 'element', styleKey = 'style', classNameKey = 'className';\r\n    rootView.style = node[styleKey];\r\n    switch (type) {\r\n        case 'hummer':\r\n            nameKey = 'tagName';\r\n            idKey = 'id';\r\n            textKey = 'content';\r\n            srcKey = 'content';\r\n            rootView.style = node.element.style;\r\n            break;\r\n    }\r\n    rootView.__view_id = node[idKey];\r\n    rootView.name = node[nameKey] && ELEMNT_TAG_MAP.get(node[nameKey].toString()) || 'template';\r\n    rootView.element = node[elementKey];\r\n    rootView.className = node[classNameKey];\r\n    ((_a = node[elementKey]) === null || _a === void 0 ? void 0 : _a.node) && (node[elementKey].node.__view_id = node[idKey]);\r\n    switch (rootView.name) {\r\n        case 'text':\r\n            rootView.text = node[textKey];\r\n            break;\r\n        case 'image':\r\n            rootView.src = node[srcKey];\r\n            break;\r\n    }\r\n};\r\nconst updateOptions = function (oldOptions, newOptions) {\r\n    for (const key in oldOptions) {\r\n        if (!(key in newOptions)) {\r\n            delete oldOptions[key];\r\n        }\r\n    }\r\n    for (const key in newOptions) {\r\n        oldOptions[key] = newOptions[key];\r\n    }\r\n    return oldOptions;\r\n};\r\nconst log = function (str) {\r\n};\r\nconst error = function (str) {\r\n};\r\nconst guid = function () {\r\n    function S4() {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    }\r\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\r\n};\n\nconst { __storageInterceptFlag__, Storage, Memory: Memory$1 } = __GLOBAL__;\r\nconst getAllStorage = (ws, params) => {\r\n    let storageAll = Storage.getAll();\r\n    let newStorageAll = [];\r\n    for (const key in storageAll) {\r\n        if (/_#_hummer_.*_#_/.test(key)) {\r\n            continue;\r\n        }\r\n        let item = {\r\n            key: key,\r\n            value: storageAll[key],\r\n        };\r\n        newStorageAll.push(item);\r\n    }\r\n    sendMessage(ws, {\r\n        type: 'storage',\r\n        method: 'setStorageList',\r\n        params: Object.assign(Object.assign({}, params), { storageAll: newStorageAll })\r\n    });\r\n};\r\nconst storageintercept = (ws) => {\r\n    __GLOBAL__.__storageInterceptFlag__ = true;\r\n    !__storageInterceptFlag__ && (__GLOBAL__.__storageOriginSet__ = Storage.set, __GLOBAL__.__storageOriginRemove__ = Storage.remove, __GLOBAL__.__storageOriginRemoveAll__ = Storage.removeAll);\r\n    Storage.set = function () {\r\n        if (Memory$1.get(\"_#_hummer_tenonIp_#_\")) {\r\n            sendMessage(ws, {\r\n                type: 'storage',\r\n                method: 'updateStorageList',\r\n                params: {\r\n                    tenonIp: Memory$1.get(\"_#_hummer_tenonIp_#_\"),\r\n                    key: arguments[0],\r\n                    value: arguments[1],\r\n                }\r\n            });\r\n        }\r\n        __GLOBAL__.__storageOriginSet__.apply(this, arguments);\r\n    };\r\n    Storage.remove = function () {\r\n        __GLOBAL__.__storageOriginRemove__.apply(this, arguments);\r\n        if (Memory$1.get(\"_#_hummer_tenonIp_#_\")) {\r\n            getAllStorage(ws, { tenonIp: Memory$1.get(\"_#_hummer_tenonIp_#_\") });\r\n        }\r\n    };\r\n    Storage.removeAll = function () {\r\n        __GLOBAL__.__storageOriginRemoveAll__.apply(this, arguments);\r\n        if (Memory$1.get(\"_#_hummer_tenonIp_#_\")) {\r\n            sendMessage(ws, {\r\n                type: 'storage',\r\n                method: 'setStorageList',\r\n                params: {\r\n                    tenonIp: Memory$1.get(\"_#_hummer_tenonIp_#_\"),\r\n                    storageAll: []\r\n                }\r\n            });\r\n        }\r\n    };\r\n};\n\nconst { __memoryInterceptFlag__, Memory } = __GLOBAL__;\r\nconst getAllMemory = (ws, params) => {\r\n    let memoryAll = Memory.getAll();\r\n    let newMemoryAll = [];\r\n    for (const key in memoryAll) {\r\n        if (/_#_hummer_.*_#_/.test(key)) {\r\n            continue;\r\n        }\r\n        let item = {\r\n            key: key,\r\n            value: memoryAll[key],\r\n        };\r\n        newMemoryAll.push(item);\r\n    }\r\n    sendMessage(ws, {\r\n        type: 'memory',\r\n        method: 'setMemoryList',\r\n        params: Object.assign(Object.assign({}, params), { memoryAll: newMemoryAll })\r\n    });\r\n};\r\nconst memoryintercept = (ws) => {\r\n    __GLOBAL__.__memoryInterceptFlag__ = true;\r\n    !__memoryInterceptFlag__ && (__GLOBAL__.__memoryOriginSet__ = Memory.set, __GLOBAL__.__memoryOriginRemove__ = Memory.remove, __GLOBAL__.__memoryOriginRemoveAll__ = Memory.removeAll);\r\n    Memory.set = function () {\r\n        if (Memory.get(\"_#_hummer_tenonIp_#_\")) {\r\n            sendMessage(ws, {\r\n                type: 'memory',\r\n                method: 'updateMemoryList',\r\n                params: {\r\n                    tenonIp: Memory.get(\"_#_hummer_tenonIp_#_\"),\r\n                    key: arguments[0],\r\n                    value: arguments[1],\r\n                }\r\n            });\r\n        }\r\n        __GLOBAL__.__memoryOriginSet__.apply(this, arguments);\r\n    };\r\n    Memory.remove = function () {\r\n        __GLOBAL__.__memoryOriginRemove__.apply(this, arguments);\r\n        if (Memory.get(\"_#_hummer_tenonIp_#_\")) {\r\n            getAllMemory(ws, { tenonIp: Memory.get(\"_#_hummer_tenonIp_#_\") });\r\n        }\r\n    };\r\n    Memory.removeAll = function () {\r\n        __GLOBAL__.__memoryOriginRemoveAll__.apply(this, arguments);\r\n        if (Memory.get(\"_#_hummer_tenonIp_#_\")) {\r\n            sendMessage(ws, {\r\n                type: 'memory',\r\n                method: 'setMemoryList',\r\n                params: {\r\n                    tenonIp: Memory.get(\"_#_hummer_tenonIp_#_\"),\r\n                    memoryAll: []\r\n                }\r\n            });\r\n        }\r\n    };\r\n};\n\nconst requestintercept = (ws) => {\r\n    const { Request, __requestInterceptFlag__ } = __GLOBAL__;\r\n    __GLOBAL__.__requestInterceptFlag__ = true;\r\n    !__requestInterceptFlag__ && (__GLOBAL__.__requestOriginSend__ = Request.prototype.send);\r\n    const interceptTime = __GLOBAL__.__devReloadTimestamp__;\r\n    Request.prototype.send = function () {\r\n        const canSendMessage = interceptTime === __GLOBAL__.__devReloadTimestamp__;\r\n        const requestId = guid();\r\n        canSendMessage && sendMessage(ws, {\r\n            type: 'netWork',\r\n            method: 'updateNetWorkList',\r\n            params: {\r\n                id: requestId,\r\n                requestInfo: {\r\n                    method: this.method,\r\n                    header: this.header,\r\n                    url: this.url,\r\n                    param: this.param,\r\n                },\r\n            }\r\n        });\r\n        const callback = arguments[0];\r\n        const mergeCallback = (res) => {\r\n            canSendMessage && sendMessage(ws, {\r\n                type: 'netWork',\r\n                method: 'updateNetWorkList',\r\n                params: {\r\n                    id: requestId,\r\n                    responseInfo: res,\r\n                }\r\n            });\r\n            callback.call(this, res);\r\n        };\r\n        __GLOBAL__.__requestOriginSend__.apply(this, [mergeCallback]);\r\n    };\r\n};\n\nlet ws, currentType;\r\nfunction initSocket (url, handlers) {\r\n    ws = new __GLOBAL__.WebSocket(url);\r\n    ws.onopen = () => {\r\n        log('websocket opened~');\r\n        storageintercept(ws);\r\n        memoryintercept(ws);\r\n        requestintercept(ws);\r\n    };\r\n    ws.onmessage = (event) => {\r\n        log(JSON.stringify(event));\r\n        let msg = JSON.parse(event.data);\r\n        currentType = msg.type || '';\r\n        if (handlers[msg.method]) {\r\n            handlers[msg.method](ws, msg.params);\r\n        }\r\n    };\r\n    ws.onclose = () => {\r\n        ws = null;\r\n        log('websocket closed~');\r\n    };\r\n}\r\nconst sendMessage = function (ws, options) {\r\n    const type = options.type || currentType;\r\n    const method = options.method || 'ignore';\r\n    const params = options.params || {};\r\n    ws.send(JSON.stringify({\r\n        type, method, params\r\n    }));\r\n};\n\nlet isWebPlatform = __GLOBAL__.Hummer.pageInfo && JSON.stringify(__GLOBAL__.Hummer.pageInfo) === '{}';\r\nfunction run(container, type = 'tenon-vue') {\r\n    __GLOBAL__.__devReloadTimestamp__ = +new Date();\r\n    let formatedNode = formatNode(container, type);\r\n    log('Socket Initializing');\r\n    const { url } = __GLOBAL__.Hummer.pageInfo || {};\r\n    if (!url) {\r\n        error(`get url error, initialization failed`);\r\n        return;\r\n    }\r\n    const { Storage, Memory } = __GLOBAL__;\r\n    let host = getPartUrlByParam(url, 'host');\r\n    let port = getPartUrlByParam(url, 'port');\r\n    let path = getPartUrlByParam(url, 'path');\r\n    let scheme = getPartUrlByParam(url, 'scheme');\r\n    if (!['http', 'https'].includes(scheme) || !port) {\r\n        error(`invalid url[${url}], initialization failed`);\r\n        return;\r\n    }\r\n    let wsTenonUrl = `ws://${host}:${port}/proxy/tenon`;\r\n    if (isWebPlatform) {\r\n        wsTenonUrl = 'ws://172.23.166.43:8000/proxy/tenon';\r\n    }\r\n    let viewMap = {}, viewId, view;\r\n    const onSocketMsgHandlers = {\r\n        'getViewTree': function (ws, params) {\r\n            var _a;\r\n            let data = getViewData(formatedNode, type);\r\n            viewMap = data.viewMap;\r\n            if ((_a = formatedNode === null || formatedNode === void 0 ? void 0 : formatedNode.element) === null || _a === void 0 ? void 0 : _a.dbg_getDescription) {\r\n                formatedNode.element.dbg_getDescription((node) => {\r\n                    sendMessage(ws, {\r\n                        method: 'setViewTree',\r\n                        params: Object.assign(Object.assign({}, params), { viewTree: [data.simpleRoot], path: path, baseInfo: __GLOBAL__.Hummer.env, devToolType: type })\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                sendMessage(ws, {\r\n                    method: 'setViewTree',\r\n                    params: Object.assign(Object.assign({}, params), { viewTree: [data.simpleRoot], path: path, baseInfo: __GLOBAL__.Hummer.env, devToolType: type })\r\n                });\r\n            }\r\n        },\r\n        'getViewInfo': function (ws, params) {\r\n            viewId = params.viewId;\r\n            view = viewMap[viewId];\r\n            view.element.getRect((rect) => {\r\n                view.element.dbg_highlight && view.element.dbg_highlight(true);\r\n                sendMessage(ws, {\r\n                    method: 'setViewInfo',\r\n                    params: Object.assign(Object.assign({}, params), { rect: rect, style: view.style, className: view.className || '' })\r\n                });\r\n            });\r\n        },\r\n        'setViewStyle': function (ws, params) {\r\n            viewId = params.viewId;\r\n            view = viewMap[viewId];\r\n            const style = params.style;\r\n            view.element.style = updateOptions(view.style, style);\r\n            sendMessage(ws, { method: 'setStyleSuccess' });\r\n        },\r\n        'setStorage': function (ws, params) {\r\n            const { type, key, value } = params.storage;\r\n            switch (type) {\r\n                case 'delete':\r\n                    Storage.remove(key);\r\n                    break;\r\n                case 'revise':\r\n                    Storage.set(key, value);\r\n                    break;\r\n            }\r\n            sendMessage(ws, { method: 'setStorageSuccess' });\r\n        },\r\n        'getStorage': function (ws, params) {\r\n            Memory.set(\"_#_hummer_tenonIp_#_\", params === null || params === void 0 ? void 0 : params.tenonIp);\r\n            getAllStorage(ws, params);\r\n        },\r\n        'setMemory': function (ws, params) {\r\n            const { type, key, value } = params.memory;\r\n            switch (type) {\r\n                case 'delete':\r\n                    Memory.remove(key);\r\n                    break;\r\n                case 'revise':\r\n                    Memory.set(key, value);\r\n                    break;\r\n            }\r\n            sendMessage(ws, { method: 'setMemorySuccess' });\r\n        },\r\n        'getMemory': function (ws, params) {\r\n            Memory.set(\"_#_hummer_tenonIp_#_\", params === null || params === void 0 ? void 0 : params.tenonIp);\r\n            getAllMemory(ws, params);\r\n        },\r\n    };\r\n    initSocket(wsTenonUrl, onSocketMsgHandlers);\r\n    log('Socket initializing complete');\r\n}\n\nexport { run };\n//# sourceMappingURL=tenon-dev-tool.es.js.map\n","module.exports = __GLOBAL__;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _callSuper(t, o, e) {\n  return o = getPrototypeOf(o), possibleConstructorReturn(t, isNativeReflectConstruct() ? Reflect.construct(o, e || [], getPrototypeOf(t).constructor) : o.apply(t, e));\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":[],"sourceRoot":""}
}
